#seteo parametros HyperG
#source("http://bioconductor.org/biocLite.R")
#biocLite(c("GO.db", "GOstats", "ath1121501.db"))
library(GO.db)
require(GOstats)
require(ath1121501.db)
#biocLite(c("igraph", "GOSemSim", "ggplot2"))
library(igraph)
library(GOSemSim)
library(ggplot2)
#biocLite(c("grid", "gridExtra", "dendextend"))
library(grid)
library(gridExtra)
library(dendextend)
#biocLite(c("genefilter", "dynamicTreeCut", "VennDiagram", "STRINGdb"))
library(genefilter) #Para el filtrado de genes K over A
library(dynamicTreeCut) #Para clusterizar con dynamic tree cut
library(VennDiagram)
library(STRINGdb)
setwd("~/doctorado/programacion/heuristica_expresion_go/test_de_sobrerepresentacion/")
source("librerias.R")
source("hypertest.R")
source("similaridad_semantica.R")
source("hipotesis_nula.R")
source("~/doctorado/programacion/heuristica_expresion_go/clustering/clusterizador-paso-1.R")
setwd("~/doctorado/programacion/heuristica_expresion_go/test_de_sobrerepresentacion/")
source("correccion_bh.R")
setwd("~/doctorado/programacion/heuristica_expresion_go/metodo_heuristico/")
chip     <- "ath1121501"
ancestros   <-as.list(GOBPANCESTOR)
hijos       <-as.list(GOBPOFFSPRING)
acc         <-as.list(ath1121501ACCNUM)
universe <- nombres_de_genes[rownames(genes)]
genes_originales<-genes
evidencia_a_filtrar = c("IEA", "NAS", "IC", "ND", "RCA")
anotaciones     <- g2at("BP", evidencia_a_filtrar)
anotaciones     <- unique(anotaciones[, c("gene_id", "go_id")])
ontologia       <- subset(anotaciones, gene_id %in% universe, select=c(gene_id, go_id))
universo        <- unique(ontologia[, "gene_id"])
universo        <- unlist(acc[which(acc %in% universo)])
universo        <- names(table(universo)[table(universo) == 1])
genes           <- genes_originales[names(unlist(acc[which(acc %in% universo)])), ]
rownames(genes) <- acc[rownames(genes)]
ontologia       <- subset(anotaciones, gene_id %in% universo, select=c(gene_id, go_id))
